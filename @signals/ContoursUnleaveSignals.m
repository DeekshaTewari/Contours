function result = ContoursUnleaveSignals(signalname,sesinfo,channel,sampling_rate)
%ContoursUnleaveSignals	Rearrange signals into salience 
%values
%	RESULT = ContoursUnleaveSignals(SIGNALNAME,SES_INFO,CHANNEL,SAMPLING_RATE) 
%	takes the SES_INFO generated by ContoursReadIniFile, extracts 
%	CHANNEL from the Streamer file and rearranges the	
%	data into salience conditions. SAMPLING_RATE has to be specified
%	in case the signals have been subsampled. The resulting 
%	structure RESULT has the following fields:
%		RESULT.timeseries
%		RESULT.contour(i).repetition(j).cluster(k).data
%		RESULT.control(i).repetition(j).cluster(k).data
%		RESULT.catchcontour.repetition(j).cluster(k).data
%		RESULT.catchcontrol.repetition(j).cluster(k).data

result.timeseries = 0:1/sampling_rate*1000:sesinfo.duration*1000;
result.sampling_rate = sampling_rate;

index = 1;

for i=1:sesinfo.stim_steps
   for j=1:sesinfo.stimsets
      filename = [signalname '.' num2str(sesinfo.sequence(index),'%04i')];
      fprintf('Reading %s...\n',filename);
		result.contour(i).repetition(j).data = nptReadStreamerChannel(filename,channel);
		index = index + 1;
	end
end

for i=1:sesinfo.stim_steps
	for j=1:sesinfo.stimsets
      filename = [signalname '.' num2str(sesinfo.sequence(index),'%04i')];
      fprintf('Reading %s...\n',filename);
		result.control(i).repetition(j).data = nptReadStreamerChannel(filename,channel);
		index = index + 1;
	end
end

if sesinfo.catchtrials==1
	catchsets = sesinfo.stimsets/2;
	for j=1:catchsets
      filename = [signalname '.' num2str(sesinfo.sequence(index),'%04i')];
      fprintf('Reading %s...\n',filename);
		result.catchcontour.repetition(j).data = nptReadStreamerChannel(filename,channel);
		index = index + 1;
	end
	
	for j=1:catchsets
      filename = [signalname '.' num2str(sesinfo.sequence(index),'%04i')];
      fprintf('Reading %s...\n',filename);
		result.catchcontrol.repetition(j).data = nptReadStreamerChannel(filename,channel);
		index = index + 1;
	end
end
